[bfg] {
  display: flex;
  justify-content: flex-start;
  align-items: stretch;
  box-sizing: border-box;
  height: 100%; // Try to fit the parent node height when available
}

[bfg][bfg__box] {
  height: auto;
}

[bfg~="row"] {
  flex-direction: row;
}

[bfg~="col"] {
  flex-direction: column;
}

[bfg~="gap"] {
  padding: ($bfg-gap / 2);
}

[bfg~="gap-in"] {
  margin: -($bfg-gap / 2);
  height: calc(100% + #{$bfg-gap});
}

[bfg~="gap"],
[bfg~="gap-in"] {
  [bfg__box] {
    padding: ($bfg-gap / 2);
  }

  [bfg__box][bfg],
  [bfg__box~="nopad"] {
    padding: 0;
  }
}

[bfg~="nogap"] [bfg__box] {
  padding: 0;
}

// Justify content along the "main" axis
[bfg~="main-center"]   { justify-content: center;        }
[bfg~="main-end"]      { justify-content: flex-end;      }
[bfg~="main-between"]  { justify-content: space-between; }
[bfg~="main-around"]   { justify-content: space-around;  }

// Align items along the "cross" axis
[bfg~="cross-start"]   { align-items: flex-start; }
[bfg~="cross-center"]  { align-items: center;     }
[bfg~="cross-end"]     { align-items: flex-end;   }

[bfg__box] {
  flex: 0 1 100%;
  position: relative;
  overflow: auto;
  box-sizing: border-box;
}

[bfg__box~="fit"] {
  flex: 0 0 auto;
}

[bfg~="box-overflow-visible"] [bfg__box],
[bfg__box~="overflow-visible"] {
  overflow: visible;
}

[bfg~="box-overflow-hidden"] [bfg__box],
[bfg__box~="overflow-hidden"] {
  overflow: hidden;
}

@if $bfg-ie11-support {
  [bfg~="row"] > [bfg__box] { max-width: 100%; }
  [bfg~="col"] > [bfg__box] { max-height: 100%; }
}

@mixin bfg-boxes($size: '') {
  [bfg~="#{$size + height-auto}"] { height: auto; }

  [bfg~="#{$size + wrap}"] { flex-wrap: wrap; }
  [bfg~="#{$size + nowrap}"] { flex-wrap: nowrap; }

  [bfg~="row"][bfg~="#{$size + reverse}"] { flex-direction: row-reverse; }
  [bfg~="col"][bfg~="#{$size + reverse}"] { flex-direction: column-reverse; }

  [bfg__box~="#{$size + first}"] { order: -1; }
  [bfg__box~="#{$size + in-place}"] { order: 0; }
  [bfg__box~="#{$size + last}"] { order: 1; }

  @for $i from 1 through 12 {
    [bfg__box~="#{$size + $i}"] { flex-basis: (100% * $i / 12); }
  }

  [bfg~="row"] {
    @if $bfg-ie11-support {
      @for $i from 1 through 12 {
        > [bfg__box~="#{$size + $i}"] { max-width: (100% * $i / 12); }
      }
    }

    &[bfg~="#{$size + lines-2}"] > [bfg__box] { height: 50%; }
    &[bfg~="#{$size + lines-3}"] > [bfg__box] { height: (100% / 3); }
    &[bfg~="#{$size + lines-4}"] > [bfg__box] { height: 25%; }
  }

  [bfg~="col"] {
    @if $bfg-ie11-support {
      @for $i from 1 through 12 {
        > [bfg__box~="#{$size + $i}"] { max-height: (100% * $i / 12); }
      }
    }

    &[bfg~="#{$size + lines-2}"] > [bfg__box] { width: 50%; }
    &[bfg~="#{$size + lines-3}"] > [bfg__box] { width: (100% / 3); }
    &[bfg~="#{$size + lines-4}"] > [bfg__box] { width: 25%; }
  }

  [bfg~="#{$size + disabled}"],
  [bfg~="#{$size + disabled-all}"],
  [bfg~="#{$size + disabled-all}"] [bfg] {
    display: block;
    height: auto;
  }

  [bfg~="#{$size + disabled}"] > [bfg__box],
  [bfg~="#{$size + disabled-all}"] [bfg__box] {
    @if $bfg-ie11-support {
      max-width: none;
      max-height: none;
    }

    width: auto;
    height: auto;
  }
}

@include bfg-boxes(); // any screen size even greater than "xl"

@include bfg-media-breakpoint-down(xl) {
  @include bfg-boxes(xl-);
}

@include bfg-media-breakpoint-down(lg) {
  @include bfg-boxes(lg-);
}

@include bfg-media-breakpoint-down(sm) {
  @include bfg-boxes(sm-);
}

@include bfg-media-breakpoint-down(xs) {
  @include bfg-boxes(xs-);
}
